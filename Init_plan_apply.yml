trigger: none

pool:
  vmImage: ubuntu-latest

stages: 
- stage: init
  displayName: init
  pool: 
    vmImage: ubuntu-latest
  jobs: 
  - job: init
    steps: 
    - task: tfsec@1
      inputs:
        version: 'v1.26.0'
        dir: '$(Build.SourcesDirectory)'
    - task: TerraformTaskV4@4
      inputs:
        provider: 'azurerm'
        command: 'init'
        workingDirectory: '$(Build.SourcesDirectory)'
        backendServiceArm: 'Deepak_terraform_service'
        backendAzureRmResourceGroupName: 'Deepakrg'
        backendAzureRmStorageAccountName: 'deepakstorageas'
        backendAzureRmContainerName: 'deepakcontainer'
        backendAzureRmKey: 'prod.terraform.tfstate'
- stage: plan
  displayName: plan
  pool: 
    vmImage: ubuntu-latest
  jobs: 
  - job: plan
    steps: 
    - task: TerraformTaskV4@4
      inputs:
        provider: 'azurerm'
        command: 'init'
        workingDirectory: '$(Build.SourcesDirectory)'
        backendServiceArm: 'Deepak_terraform_service'
        backendAzureRmResourceGroupName: 'Deepakrg'
        backendAzureRmStorageAccountName: 'deepakstorageas'
        backendAzureRmContainerName: 'deepakcontainer'
        backendAzureRmKey: 'prod.terraform.tfstate'
    - task: TerraformTaskV4@4
      inputs:
        provider: 'azurerm'
        command: 'plan'
        workingDirectory: '$(Build.SourcesDirectory)'
        environmentServiceNameAzureRM: 'Deepak_terraform_service'

- stage: apply
  displayName: apply
  pool: 
    vmImage: ubuntu-latest
  jobs: 
  - job: plan
    steps: 
    - task: TerraformTaskV4@4
      inputs:
        provider: 'azurerm'
        command: 'init'
        workingDirectory: '$(Build.SourcesDirectory)'
        backendServiceArm: 'Deepak_terraform_service'
        backendAzureRmResourceGroupName: 'Deepakrg'
        backendAzureRmStorageAccountName: 'deepakstorageas'
        backendAzureRmContainerName: 'deepakcontainer'
        backendAzureRmKey: 'prod.terraform.tfstate'
    - task: TerraformTaskV4@4
      inputs:
        provider: 'azurerm'
        command: 'apply'
        workingDirectory: '$(Build.SourcesDirectory)'
        environmentServiceNameAzureRM: 'Deepak_terraform_service'


